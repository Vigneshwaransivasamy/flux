!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):n.flux=t()}(this,function(){"use strict";function n(n){for(var t="",r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-",e=0;n>e;e++)t+=r.charAt(Math.floor(64*Math.random()));return t}function t(){return n(32)}function r(n){return Object.assign({},n,{_id:t()})}function e(n,e){function u(n){f.forEach(function(t){t({state:o,action:n})})}var o=e||{};o=r(o);var c=n||function(n){return n},f=new Map;this.subscribe=function(n){if(i(Function)(n)){var r=t();return f.set(r,n),this.unsubscribe.bind(this,r)}return Error("Type Error: Subscribers should be of type Function")},this.unsubscribe=function(n){return f.has(n)?f.delete(n):Error("Type Error: subscriber should be of type Function")},this.dispatch=function(n){let t=c(o,n);JSON.stringify(o)==JSON.stringify(t)||(o=r(t),u(n))},this.getState=function(){return o}}var i=n=>t=>Object(t)instanceof n;return{createStore:function(n,t){return new e(n,t)},combineReducers:function(n){return function(t,r){var e={};for(let i in n)e[i]=n[i](t[i],r);return e}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx1eGkubWluLmpzIiwic291cmNlcyI6WyIuLi9zb3VyY2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGbHV4IHRyaWVzIHRvIGltcGxlbWVudCB0aGUgZXhhY3QgZmx1eCBhcmNoaXRlY3R1cmFsIHBhdHRlcm4uXG4gKiBAbW9kdWxlIEZsdXhcbiAqIEBtZW1iZXJPZiBGbHV4aVxuICogQGRlcGVuZE9uIGZsdXhpXG4gKiBAYXV0aG9yIFZpZ25lc2h3YXJhbiBTaXZhc2FteVxuICogQHNpbmNlIHYxLjEuM1xuICogQHBhcmFtIHsqfVxuICogQHJldHVybiB7T2JqZWN0fVxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgc3RvcmUgPSBmbHV4LmNyZWF0ZVN0b3JlKHRvZG9BcHAsIFNUQVRFX0ZST01fU0VSVkVSKTtcbiAqIEZvciBjb21wbGV0ZSB1c2FnZSByZWZlcjogdGVzdC9pbmRleC5qc1xuICovXG5cbnZhciBpcyA9IHR5cGUgPT4gdGFyZ2V0ID0+IE9iamVjdCh0YXJnZXQpIGluc3RhbmNlb2YgdHlwZTtcblxuZnVuY3Rpb24gX2hhc2gobGVuZ3RoKSB7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBsYW5ndWFnZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OV8tJztcblxuICBmb3IgKHZhciBvZmZzZXQgPSAwOyBvZmZzZXQgPCBsZW5ndGg7IG9mZnNldCsrKVxuICAgIGhhc2ggKz0gbGFuZ3VhZ2UuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGxhbmd1YWdlLmxlbmd0aCkpO1xuXG4gIHJldHVybiBoYXNoO1xufVxuXG5mdW5jdGlvbiBfaGFzaDMyKCkge1xuICByZXR1cm4gX2hhc2goMzIpO1xufVxuXG5mdW5jdGlvbiBfYWRkSWQob2JqKXtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sb2JqLHtfaWQgOl9oYXNoMzIoKX0pO1xufVxuXG5mdW5jdGlvbiBzdG9yZShyZWR1Y2VyLCBzdGF0ZSkge1xuXG4gIHZhciBfc3RhdGUgPSBzdGF0ZSB8fCB7fTtcbiAgX3N0YXRlID0gX2FkZElkKF9zdGF0ZSk7XG4gIHZhciBfcmVkdWNlciA9IHJlZHVjZXIgfHwgZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgcmV0dXJuIHN0YXRlO1xuICB9O1xuXG4gIHZhciBfc3Vic2NyaWJlcnMgPSBuZXcgTWFwKCk7XG5cbiAgZnVuY3Rpb24gX2ludm9rZUNhbGxiYWNrKHBheWxvYWQpIHtcbiAgICBfc3Vic2NyaWJlcnMuZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgIGZuKHtzdGF0ZTpfc3RhdGUsYWN0aW9uOnBheWxvYWR9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHRoaXMuc3Vic2NyaWJlID0gZnVuY3Rpb24gc3Vic2NyaWJlKGZuKSB7XG4gICAgaWYgKGlzKEZ1bmN0aW9uKShmbikpIHtcbiAgICAgIHZhciBpZCA9IF9oYXNoMzIoKTtcbiAgICAgIF9zdWJzY3JpYmVycy5zZXQoaWQsIGZuKTtcbiAgICAgIHJldHVybiB0aGlzLnVuc3Vic2NyaWJlLmJpbmQodGhpcywgaWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbmV3IEVycm9yKCdUeXBlIEVycm9yOiBTdWJzY3JpYmVycyBzaG91bGQgYmUgb2YgdHlwZSBGdW5jdGlvbicpO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLnVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdW5zdWJzY3JpYmUoaWQpIHtcbiAgICBpZiAoX3N1YnNjcmliZXJzLmhhcyhpZCkpIHtcbiAgICAgIHJldHVybiBfc3Vic2NyaWJlcnMuZGVsZXRlKGlkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBFcnJvcignVHlwZSBFcnJvcjogc3Vic2NyaWJlciBzaG91bGQgYmUgb2YgdHlwZSBGdW5jdGlvbicpO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLmRpc3BhdGNoID0gZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgbGV0IF9uZXdTdGF0ZSA9IF9yZWR1Y2VyKF9zdGF0ZSwgYWN0aW9uKTtcbiAgICBpZihKU09OLnN0cmluZ2lmeShfc3RhdGUpID09IEpTT04uc3RyaW5naWZ5KF9uZXdTdGF0ZSkpe1xuICAgICAgLy8gZG8gbm90aGluZ1xuICAgICAgLy8gY29uc29sZS5sb2coJ1N0YXRlcyBhcmUgc2FtZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfc3RhdGUgPSBfYWRkSWQoX25ld1N0YXRlKTtcbiAgICAgIF9pbnZva2VDYWxsYmFjayhhY3Rpb24pO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLmdldFN0YXRlID0gZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgcmV0dXJuIF9zdGF0ZTtcbiAgfTtcblxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdG9yZShyZWR1Y2VycywgaW5pdGlhbFN0YXRlKSB7XG4gIHJldHVybiBuZXcgc3RvcmUocmVkdWNlcnMsIGluaXRpYWxTdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2VyT2JqZWN0KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcbiAgICBmb3IgKGxldCBwcm9wIGluIHJlZHVjZXJPYmplY3QpIHtcbiAgICAgIG5leHRTdGF0ZVtwcm9wXSA9IHJlZHVjZXJPYmplY3RbcHJvcF0oc3RhdGVbcHJvcF0sIGFjdGlvbik7XG4gICAgfVxuICAgIHJldHVybiBuZXh0U3RhdGU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY3JlYXRlU3RvcmUsXG4gIGNvbWJpbmVSZWR1Y2Vyc1xufTtcblxuXG4vKipcbiAgKiBSZWdpc3RlcnMgYSBjYWxsYmFjayB0byBiZSBpbnZva2VkIHdpdGggZXZlcnkgZGlzcGF0Y2hlZCBwYXlsb2FkLlxuICAqIFJldHVybnMgYSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHdpdGggYHdhaXRGb3IoKWAuXG4gICogQG1vZHVsZSBjcmVhdGVTdG9yZVxuICAqIEBzaW5jZSB2MC4wLjFcbiAgKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAgKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWR1Y2VyXG4gICogQHJldHVybiB7U3RyaW5nfVxuICAqIEBleGFtcGxlIHRlc3QvaW5kZXguanNcbiAgKlxuICAqLyJdLCJuYW1lcyI6WyJfaGFzaCIsImxlbmd0aCIsImhhc2giLCJsYW5ndWFnZSIsIm9mZnNldCIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIl9oYXNoMzIiLCJfYWRkSWQiLCJvYmoiLCJPYmplY3QiLCJhc3NpZ24iLCJfaWQiLCJzdG9yZSIsInJlZHVjZXIiLCJzdGF0ZSIsIl9pbnZva2VDYWxsYmFjayIsInBheWxvYWQiLCJmb3JFYWNoIiwiZm4iLCJfc3RhdGUiLCJhY3Rpb24iLCJfcmVkdWNlciIsIl9zdWJzY3JpYmVycyIsIk1hcCIsInN1YnNjcmliZSIsImlzIiwiRnVuY3Rpb24iLCJpZCIsInNldCIsInRoaXMiLCJ1bnN1YnNjcmliZSIsImJpbmQiLCJFcnJvciIsImhhcyIsImRlbGV0ZSIsImRpc3BhdGNoIiwiX25ld1N0YXRlIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldFN0YXRlIiwidHlwZSIsInRhcmdldCIsInJlZHVjZXJzIiwiaW5pdGlhbFN0YXRlIiwicmVkdWNlck9iamVjdCIsIm5leHRTdGF0ZSIsInByb3AiXSwibWFwcGluZ3MiOiJnTEFpQkEsU0FBU0EsRUFBTUMsT0FJUixJQUhEQyxFQUFPLEdBQ1BDLEVBQVcsbUVBRU5DLEVBQVMsRUFBWUgsRUFBVEcsRUFBaUJBLElBQ3BDRixHQUFRQyxFQUFTRSxPQUFPQyxLQUFLQyxNQUFzQkosR0FBaEJHLEtBQUtFLGtCQUVuQ04sRUFHVCxTQUFTTyxXQUNBVCxFQUFNLElBR2YsU0FBU1UsRUFBT0MsVUFDUEMsT0FBT0MsVUFBVUYsR0FBS0csSUFBS0wsTUFHcEMsU0FBU00sRUFBTUMsRUFBU0MsWUFVYkMsRUFBZ0JDLEtBQ1ZDLFFBQVEsU0FBVUMsTUFDekJKLE1BQU1LLEVBQU9DLE9BQU9KLFVBVnhCRyxFQUFTTCxRQUNKUCxFQUFPWSxPQUNaRSxFQUFXUixHQUFXLFNBQVVDLFVBQzNCQSxHQUdMUSxFQUFlLElBQUlDLFNBUWxCQyxVQUFZLFNBQW1CTixNQUM5Qk8sRUFBR0MsU0FBSEQsQ0FBYVAsR0FBSyxLQUNoQlMsRUFBS3JCLGFBQ0lzQixJQUFJRCxFQUFJVCxHQUNkVyxLQUFLQyxZQUFZQyxLQUFLRixLQUFNRixVQUV4QkssTUFBTSw0REFJaEJGLFlBQWMsU0FBcUJILFVBQ2xDTCxFQUFhVyxJQUFJTixHQUNaTCxFQUFhWSxPQUFPUCxHQUVoQkssTUFBTSwyREFJaEJHLFNBQVcsU0FBa0JmLE9BQzVCZ0IsRUFBWWYsRUFBU0YsRUFBUUMsR0FDOUJpQixLQUFLQyxVQUFVbkIsSUFBV2tCLEtBQUtDLFVBQVVGLE9BSWpDN0IsRUFBTzZCLEtBQ0FoQixVQUlmbUIsU0FBVyxrQkFDUHBCLEdBbEVYLElBQUlNLEVBQUtlLEdBQVFDLEdBQVVoQyxPQUFPZ0MsYUFBbUJELHFCQXVFckQsU0FBcUJFLEVBQVVDLFVBQ3RCLElBQUkvQixFQUFNOEIsRUFBVUMsb0JBRzdCLFNBQXlCQyxVQUNoQixTQUFVOUIsRUFBT00sT0FDbEJ5QixTQUNDLElBQUlDLEtBQVFGLElBQ0xFLEdBQVFGLEVBQWNFLEdBQU1oQyxFQUFNZ0MsR0FBTzFCLFVBRTlDeUIifQ==
